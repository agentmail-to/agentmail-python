# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...types.count import Count
from ...types.last_key import LastKey
from ...types.limit import Limit
from .inbox import Inbox


class ListInboxesResponse(UniversalBaseModel):
    """
    Examples
    --------
    from agentmail.inboxes import ListInboxesResponse
    from agentmail.inboxes import Inbox
    import datetime
    ListInboxesResponse(inboxes=[Inbox(inbox_id='yourinbox@agentmail.to', display_name='Your Inbox', created_at=datetime.datetime.fromisoformat("2024-01-15 09:30:00+00:00", ), )], limit=10, count=1, last_key='123e4567-e89b-12d3-a456-426614174000', )
    """

    inboxes: typing.List[Inbox] = pydantic.Field()
    """
    Inbox items. Ordered by `created_at` ascending.
    """

    count: Count
    limit: typing.Optional[Limit] = None
    last_key: typing.Optional[LastKey] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
